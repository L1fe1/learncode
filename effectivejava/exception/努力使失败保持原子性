• 失败的方法调用应该使对象保持在被调用之前的状态。
• 四种方式保持失败的原子性
  。设计一个不可变对象。
  。调整计算处理过程的顺序，使得任何可能会失败的计算部分都在对象状态被修改之前发生。
  。第三种获得失败原子性的办法就是编写一段恢复代码（recovery code）。
  。最后一种在对象的一份临时拷贝上操作，当操作完成后再用临时拷贝中的结果代替对象的内容。
  。一般而言，作为方法规范的一部分，产生的任何异常都应该让对象保持在该方法调用之前的状态。
