• 如果没有先认真考虑默认的序列化形式是否合适，则不要贸然接受。
• 如果一个对象的物理表示法等同于它的逻辑内容，可能就适合于使用默认的序列化形式。
• 即使你确定了默认的序列化形式是合适的，通常还必须提供一个readObject方法以保证约束关系和安全性。
• 当一个对象的物理表示法与他的逻辑数据内容有实质性地区别时，使用默认序列化形式会有以下4个缺点。（例如双向列表）。
  。他使这个类的导出API永远地束缚在该类的内部表示法上
  。会消耗过多的空间
  。消耗过多的时间
  。他会引起栈溢出
• 如果所有的实例域都是瞬时的，从技术角度而言，不调用defaultWriteObject和defaultReadObject也是允许的，但是不推荐这么做。
• 不管你选择了哪种序列化形式，都要为自己编写的每个可序列化的类声明一个显式的序列版本UID（serial version UID）。
• 可以提升小小的性能好处，不然会在运行时通过一个高开销的计算过程，产生一个序列版本UID。
